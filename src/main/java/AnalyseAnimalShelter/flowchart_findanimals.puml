@startuml
start
:user provides sorting methode;
:system retrieves the animals;
:system finding the animal by name;
if(finding by name) then (yes)
:system retrieves the animal;
:system finding animal by name);
end;
else (no)
if(finding by age)
:system retrieves the animals;
:system finding  the animal by age;
end;
  else (no)

if(finding animal by ID) then (yes)
:system (finding animal by ID);
endif;
if(finding oldeste animal) then (yes)
:system (finding oldeste animal);
else (no)
      :Error: can not found de oldeste animals;
endif;
stop;

@enduml

@startuml

class AnimalShelter {
  + findAnimal(name: String): Optional<Animal>
  + findAnimal(age: int): List<Animal>
  + findAnimalById(id: int): Optional<Animal>
}

class Animal {
  - id: int
  - name: String
  - age: int
}

class Optional<T> {
}

class List<T> {
}

AnimalShelter --> Animal: has
AnimalShelter --> Optional: uses
AnimalShelter --> List: uses

@enduml
@startuml
start
:User provides sorting method;
if (Sorting by name?) then (yes)
  :System retrieves the animals;
  :System sorts animals by name;
else (no)
  if (Sorting by age?) then (yes)
    :System retrieves the animals;
    :System sorts animals by age;
  else (no)
    if (Sorting by id?) then (yes)
      :System retrieves the animals;
      :System sorts animals by id;
    else (no)
      :Error: can only sort by age, name, or id;
    endif
  endif
endif
stop
@enduml

@startuml

start
:User provides find method;
if (finding by name?) then (yes)
  :System retrieves the animals;
  :System find animals by name;
else (no)
  endif



if (finding by id?) then (yes)
  :System retrieves the animals;
  :System find animals by id;
else (no)
  :Error: can only sort by age, name, or id;
endif

stop

@enduml

@startuml

start
:user input name or id of animal;
if(user input name) then (yes)
   :system retrieves animals by name;
   if (are there animals) then (yes)
     if (is there more than 1 animals) then (yes)
     :error too many animals;
     end;
     else(no)
     :return the found animals;


     endif;

   else(no)
   :error no animal found;
   end;
   endif;



else (no , uses id)
      :system retrieves animals by id;
      if (is the animals found) then (yes)


      else(no)
      :error no animal found;
      end;
      endif;
      endif
      :return the found animals;
      stop;


@enduml
@startuml

start
:user inputs name or id of animal;
if (user inputs name) then (yes)
    :system retrieves animal by name;
    if (are there animals) then (yes)
        if (is there more than 1 animal) then (yes)
            :error too many animals;
            end;
        else (no)
            :return the found animal;
            stop;
        endif

    else (no)
        :error no animals found;
        end;
    endif


else (no, uses id)
    :system retrieves animal by id;
    if (is the animal found) then (yes)
        :return the found animal;
        stop;
    else (no)
        :error no animals found;
        end;
    endif
endif


@enduml